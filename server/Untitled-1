// Check if the room is filled up
  if (rooms[roomID] && rooms[roomID].length >= 2) {
    // Room is full
    // Notify the user that the room is full
    // and they cannot join
    callback({
      response: {
        success: false,
        message: `Room ${roomID} is full. You cannot join.`,
      },
    });
    console.log(`Room ${roomID} is full. User ${socket.id} cannot join.`);
  } else {
    // Room is not full
    // Add the user to the room
    // and notify the other users in the room
    // that a new user has joined
    // and send the user a message that they have joined the room
    socket.join(roomID);
    console.log(`User ${socket.id} joined room: ${roomID}`);
    rooms[roomID] = rooms[roomID] || [];
    rooms[roomID].push(socket.id);
    socket.roomID = roomID;
    socket.to(roomID).emit("message", "A new user has joined the room");
    console.log(`Room ${roomID} now has users: ${rooms[roomID]}`);
    return callback({
      response: {
        success: true,
        message: `You have joined room ${roomID}`,
      },
    });
  }